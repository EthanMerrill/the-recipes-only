import Header from "@/components/Header";
import Head from 'next/head'
import { Recipe } from "@/types/Recipe";
import { useContext, useEffect, useState } from "react";
import { doc, setDoc } from "firebase/firestore";
import db from "../api/clientApp";
import { capitalizeFirstLetter, recipeFormatter } from "@/utils/utils";
import { getRecipeApi } from "../api/getRecipe";
import { useRouter } from "next/router";
import { AppContext } from "@/context/state";


export default function NewRecipe () {
    const [recipe, setRecipe] = useState({} as Recipe)
    const [searchTerm, setSearchTerm] = useState('')
    const router = useRouter()
    const appContext = useContext(AppContext)
    
    // get the recipe   
    const handleFetch = async () => {
        const prompt = encodeURI(`${searchTerm} recipe with ingredients and instructions only`)
        const recipeResponse = await getRecipeApi(prompt)
        return await recipeResponse
    }

    useEffect(() => {
        const {searchTerm} = router.query
        //set the recipe name in state
        appContext.setRecipeName(searchTerm)
        setSearchTerm(searchTerm as string)
    }, [router.query, searchTerm])

    useEffect(() => {
        
        const recipeReturn = handleFetch().then((response) => {
            let newRecipe = recipeFormatter(searchTerm, response)
            setRecipe(newRecipe)
            return {newRecipe}
        })
        
    }, [ searchTerm])

    useEffect(() => {
        if(recipe.name){
            // save recipe to firestore db
            recipe.name = capitalizeFirstLetter(recipe.name)
            setDoc(doc(db, "recipes", recipe.name), recipe)
        }

    }, [recipe])

    return(<>
            <Head>
                <title>The Recipes Only</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
        <Header/>
        <main className='flex flex-col p-6 min-h-screen  bg-page-bg dark:bg-gray-dark'>
                <div className='border-t border-gray-50 py-1'></div>
                <div className=' sans w-2/5 mx-auto'>
                    <h1 className='text-2xl py-4'>Ingredients</h1>
                    <ul>
                    {recipe?.ingredients?.map((ingredient:string, i:number) => {
                        return <li key={i}>{ingredient}</li>
                        })}
                    </ul>
                    <h1 className='text-2xl py-4'>Directions</h1>
                    <ol>
                    {recipe?.instructions?.map((ingredient:string, i:number) => {
                        return <li key={i}>{ingredient}</li>
                        })}
                    </ol>
                </div>
            </main>
        </>
    )
}